======= Serwer =======

1. Zainstalować docker.
2. Stworzyć maszynę docker'a np.: docker-machine create default --driver=virtualbox --virtualbox-memory=5000 --virtualbox-disk-size=50000
3. Podłączyć się do aktywnej maszyny: eval "$(docker-machine env default)"
4. Załadować obrazy dockera za pomocą skryptu ./load-img.sh lub we własnym zakresie.
5. Uruchomić skrypt ./deploy-app.sh
6. Umożliwić dostęp do serwisu adly-edge z zewnątrz np.:
    VBoxManage controlvm $(docker-machine active) natpf1 "adlyedge,tcp,,9999,,9999"
    można cofnąć przekierowanie portów za pomocą:
    VBoxManage controlvm default natpf1 delete "adlyedge"
7. Aplikacja webowa dostępna jest na porcie 8080

Uwagi:
 - plik merged.cql musi znajdować się w katalogu wywołania skryptu deply-app.sh
 - proces uruchamiania wszystkich serwisów trwa ok 7 min (na moim środowisku)
 - po uruchomieniu aplikacji mogą wystąpić błędy 500 podczas requestów do serwisów. Jest to spodziewane zjawisko, które ustępuje po kliku żądaniach. Dla pewności po błędnych żądaniach należy odczekać ok 1min aż Eureka wykryje wszystkie usługi (spowodowane jest to tzw czasem heartbeat).
 - Login: admin Hasło: admin

======= Android ========
Uwaga: na potrzeby prezentacyjne należy ręcznie zmienić wartość "adly_url". W warunkach produkcyjnych, aplikacja mobilna odwoływała by się wyłącznie do jednego adresu np. https://api.adly.io
1. Zmienić wartość "adly_url" na odpowiedni adres serwisu adly-edge (port 9999) np. http://xx.xx.xx.xx:9999
- Można najpierw spróbować otworzyć adres http://xx.xx.xx.xx:9999/health w przeglądarce, aby sprawdzić, czy telefon jest w stanie połączyć się z serwisem.
2. Zainstalować oraz uruchomić aplikację przy użyciu Android Studio.


